name: Get PR Comments

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created, edited, deleted]

jobs:
  fetch-comments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code for PR comments
        uses: actions/checkout@v2

      - name: Get PR comments
        run: |
          # Define variables
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO_OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.event.repository.name }}
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          # Use GitHub API to get all comments for the PR
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls/$PR_NUMBER/comments" \
               -o pr_comments.json

          # Prepare Markdown CV
          echo "# PR Review Comments for PR #$PR_NUMBER" > pr_review_comments.md
          echo "Repository: $REPO_OWNER/$REPO_NAME" >> pr_review_comments.md
          echo "### Review Comments" >> pr_review_comments.md
          echo "" >> pr_review_comments.md

          # Parse the response and format it as Markdown
          echo "$response" | jq -r '.[] | "- **Commenter**: \(.user.login) \n  **Comment**: \(.body)\n  **File**: \(.path)\n  **Line**: \(.position)\n  ' >> pr_review_comments.md


      - name: Display PR comments
        run: |
          cat pr_comments.json

      - name: Display PR review comments
        run: |
          cat pr_review_comments.md

      - name: Upload formatted PR comments as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pr-review-comments
          path: pr_review_comments.md
